<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Bz0dMsbMqFESAAAAAElFTkSuQmCC
</value>
  </data>
</root>